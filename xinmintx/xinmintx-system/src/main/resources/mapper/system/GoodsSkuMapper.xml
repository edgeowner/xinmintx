<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.system.mapper.GoodsSkuMapper">
  <resultMap id="BaseResultMap" type="com.xinmintx.system.domain.GoodsSku">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sku_id" jdbcType="VARCHAR" property="skuId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="spec_value_id" jdbcType="VARCHAR" property="specValueId" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="agent_price" jdbcType="DECIMAL" property="agentPrice" />
    <result column="line_price" jdbcType="DECIMAL" property="linePrice" />
    <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
    <result column="photo_id" jdbcType="INTEGER" property="photoId" />
    <result column="goods_sales" jdbcType="INTEGER" property="goodsSales" />
    <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="purchase_price" jdbcType="TIMESTAMP" property="purchasePrice" />
    <result column="e_price" jdbcType="DECIMAL" property="ePrice" />
    <result column="glod_price" jdbcType="DECIMAL" property="glodPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sku_id, goods_id, spec_value_id, price, agent_price, line_price, stock_num, photo_id, 
    goods_sales, goods_weight, create_time, update_time, purchase_price, e_price, glod_price
  </sql>
  <select id="selectByExample" parameterType="com.xinmintx.system.domain.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from goods_sku
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_sku
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from goods_sku
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinmintx.system.domain.GoodsSkuExample">
    delete from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.system.domain.GoodsSku" useGeneratedKeys="true">
    insert into goods_sku (sku_id, goods_id, spec_value_id,
      price, agent_price, line_price,
      stock_num, photo_id, goods_sales,
      goods_weight, create_time, update_time,
      purchase_price, e_price, glod_price
      )
    values (#{skuId,jdbcType=VARCHAR}, #{goodsId,jdbcType=INTEGER}, #{specValueId,jdbcType=VARCHAR},
      #{price,jdbcType=DECIMAL}, #{agentPrice,jdbcType=DECIMAL}, #{linePrice,jdbcType=DECIMAL},
      #{stockNum,jdbcType=INTEGER}, #{photoId,jdbcType=INTEGER}, #{goodsSales,jdbcType=INTEGER},
      #{goodsWeight,jdbcType=DOUBLE}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{purchasePrice,jdbcType=DECIMAL}, #{ePrice,jdbcType=DECIMAL}, #{glodPrice,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.system.domain.GoodsSku" useGeneratedKeys="true">
    insert into goods_sku
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        sku_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="specValueId != null">
        spec_value_id,
      </if>
      <if test="price != null">
        price,
      </if>
      <!--<if test="agentPrice != null">-->
        <!---->
      <!--</if>-->
      agent_price,
      <if test="linePrice != null">
        line_price,
      </if>
      <if test="stockNum != null">
        stock_num,
      </if>
      <if test="photoId != null">
        photo_id,
      </if>
      <if test="goodsSales != null">
        goods_sales,
      </if>
      <if test="goodsWeight != null">
        goods_weight,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="purchasePrice != null">
        purchase_price,
      </if>
      <!--<if test="ePrice != null">-->
        <!---->
      <!--</if>-->
      e_price,
      <!--<if test="glodPrice != null">-->
        <!---->
      <!--</if>-->
      glod_price,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="skuId != null">
        #{skuId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specValueId != null">
        #{specValueId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <!--<if test="agentPrice != null">-->
        <!---->
      <!--</if>-->
      #{agentPrice,jdbcType=DECIMAL},
      <if test="linePrice != null">
        #{linePrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="photoId != null">
        #{photoId,jdbcType=INTEGER},
      </if>
      <if test="goodsSales != null">
        #{goodsSales,jdbcType=INTEGER},
      </if>
      <if test="goodsWeight != null">
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasePrice != null">
        #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <!--<if test="ePrice != null">-->
        <!---->
      <!--</if>-->
      #{ePrice,jdbcType=DECIMAL},
      <!--<if test="glodPrice != null">-->
       <!---->
      <!--</if>-->
      #{glodPrice,jdbcType=DECIMAL},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinmintx.system.domain.GoodsSkuExample" resultType="java.lang.Long">
    select count(*) from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_sku
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.skuId != null">
        sku_id = #{record.skuId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.specValueId != null">
        spec_value_id = #{record.specValueId,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.agentPrice != null">
        agent_price = #{record.agentPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.linePrice != null">
        line_price = #{record.linePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.stockNum != null">
        stock_num = #{record.stockNum,jdbcType=INTEGER},
      </if>
      <if test="record.photoId != null">
        photo_id = #{record.photoId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSales != null">
        goods_sales = #{record.goodsSales,jdbcType=INTEGER},
      </if>
      <if test="record.goodsWeight != null">
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.purchasePrice != null">
        purchase_price = #{record.purchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.ePrice != null">
        e_price = #{record.ePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.glodPrice != null">
        glod_price = #{record.glodPrice,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_sku
    set id = #{record.id,jdbcType=INTEGER},
    sku_id = #{record.skuId,jdbcType=VARCHAR},
    goods_id = #{record.goodsId,jdbcType=INTEGER},
    spec_value_id = #{record.specValueId,jdbcType=VARCHAR},
    price = #{record.price,jdbcType=DECIMAL},
    agent_price = #{record.agentPrice,jdbcType=DECIMAL},
    line_price = #{record.linePrice,jdbcType=DECIMAL},
    stock_num = #{record.stockNum,jdbcType=INTEGER},
    photo_id = #{record.photoId,jdbcType=INTEGER},
    goods_sales = #{record.goodsSales,jdbcType=INTEGER},
    goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
    create_time = #{record.createTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    purchase_price = #{record.purchasePrice,jdbcType=DECIMAL},
    e_price = #{record.ePrice,jdbcType=DECIMAL},
    glod_price = #{record.glodPrice,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinmintx.system.domain.GoodsSku">
    update goods_sku
    <set>
      <if test="skuId != null">
        sku_id = #{skuId,jdbcType=VARCHAR},
      </if>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="specValueId != null">
        spec_value_id = #{specValueId,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <!--<if test="agentPrice != null">-->
        <!---->
      <!--</if>-->
      agent_price = #{agentPrice,jdbcType=DECIMAL},
      <if test="linePrice != null">
        line_price = #{linePrice,jdbcType=DECIMAL},
      </if>
      <if test="stockNum != null">
        stock_num = #{stockNum,jdbcType=INTEGER},
      </if>
      <if test="photoId != null">
        photo_id = #{photoId,jdbcType=INTEGER},
      </if>
      <if test="goodsSales != null">
        goods_sales = #{goodsSales,jdbcType=INTEGER},
      </if>
      <if test="goodsWeight != null">
        goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="purchasePrice != null">
        purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      </if>
      <!--<if test="ePrice != null">-->
        <!---->
      <!--</if>-->
      e_price = #{ePrice,jdbcType=DECIMAL},
      <!--<if test="glodPrice != null">-->
        <!---->
      <!--</if>-->
      glod_price = #{glodPrice,jdbcType=DECIMAL},
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinmintx.system.domain.GoodsSku">
    update goods_sku
    set sku_id = #{skuId,jdbcType=VARCHAR},
      goods_id = #{goodsId,jdbcType=INTEGER},
      spec_value_id = #{specValueId,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      agent_price = #{agentPrice,jdbcType=DECIMAL},
      line_price = #{linePrice,jdbcType=DECIMAL},
      stock_num = #{stockNum,jdbcType=INTEGER},
      photo_id = #{photoId,jdbcType=INTEGER},
      goods_sales = #{goodsSales,jdbcType=INTEGER},
      goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      purchase_price = #{purchasePrice,jdbcType=DECIMAL},
      e_price = #{ePrice,jdbcType=DECIMAL},
      glod_price = #{glodPrice,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xinmintx.system.domain.GoodsSkuExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_sku
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectSpecValueId" parameterType="Integer" resultType="string">
    select spec_value_id
    from goods_sku
    where id = #{id}
  </select>

</mapper>