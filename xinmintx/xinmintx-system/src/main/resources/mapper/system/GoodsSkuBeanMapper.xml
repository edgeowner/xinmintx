<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.system.mapper.GoodsSkuBeanMapper">
    <resultMap id="BaseResultMap" type="com.xinmintx.system.domain.GoodsSkuBean">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="sku_id" jdbcType="VARCHAR" property="skuId" />
        <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
        <result column="name" jdbcType="VARCHAR" property="specName" />
        <result column="value" jdbcType="VARCHAR" property="specValue" />
        <result column="spec_value_id" jdbcType="VARCHAR" property="specValueId" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="agent_price" jdbcType="DECIMAL" property="agentPrice" />
        <result column="line_price" jdbcType="DECIMAL" property="linePrice" />
        <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
        <result column="photo_id" jdbcType="INTEGER" property="photoId" />
        <result column="photo_url" jdbcType="INTEGER" property="photo" />
        <result column="goods_sales" jdbcType="INTEGER" property="goodsSales" />
        <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <resultMap id="BaseMap" type="com.xinmintx.system.domain.GoodsSku">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="sku_id" jdbcType="VARCHAR" property="skuId" />
        <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
        <result column="spec_value_id" jdbcType="VARCHAR" property="specValueId" />
        <result column="price" jdbcType="DECIMAL" property="price" />
        <result column="agent_price" jdbcType="DECIMAL" property="agentPrice" />
        <result column="line_price" jdbcType="DECIMAL" property="linePrice" />
        <result column="stock_num" jdbcType="INTEGER" property="stockNum" />
        <result column="photo_id" jdbcType="INTEGER" property="photoId" />
        <result column="goods_sales" jdbcType="INTEGER" property="goodsSales" />
        <result column="goods_weight" jdbcType="DOUBLE" property="goodsWeight" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
        <result column="purchase_price" property="purchasePrice" />
        <result column="e_price" jdbcType="DECIMAL" property="ePrice" />
        <result column="glod_price" jdbcType="DECIMAL" property="glodPrice" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, sku_id, goods_id, spec_value_id, price, agent_price, line_price, stock_num, photo_id,
    goods_sales, goods_weight, create_time, update_time,purchase_price, e_price, glod_price
  </sql>
    <select id="selectSku" resultMap="BaseMap">
        select <include refid="Base_Column_List"/> from goods_sku
        where goods_id = #{goodsId}
    </select>
    <select id="selectSkuById" resultMap="BaseMap">
        select <include refid="Base_Column_List"/> from goods_sku
        where id = #{id}
    </select>


</mapper>