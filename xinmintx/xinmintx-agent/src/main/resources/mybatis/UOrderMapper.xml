<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.agent.mapper.UOrderMapper">
  <resultMap id="BaseResultMap" type="com.xinmintx.agent.model.UOrder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="outTradeNo" />
    <result column="prepay_id" jdbcType="VARCHAR" property="prepayId" />
    <result column="goods_desc" jdbcType="VARCHAR" property="goodsDesc" />
    <result column="total_fee" jdbcType="BIGINT" property="totalFee" />
    <result column="pay_type" jdbcType="CHAR" property="payType" />
    <result column="pay_status" jdbcType="CHAR" property="payStatus" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="version_id" jdbcType="VARCHAR" property="versionId" />
    <result column="merchant_id" jdbcType="VARCHAR" property="merchantId" />
    <result column="order_id" jdbcType="VARCHAR" property="orderId" />
    <result column="settle_date" jdbcType="TIMESTAMP" property="settleDate" />
    <result column="complete_date" jdbcType="TIMESTAMP" property="completeDate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="notify_typ" jdbcType="INTEGER" property="notifyTyp" />
    <result column="pay_ord_no" jdbcType="VARCHAR" property="payOrdNo" />
    <result column="order_amt" jdbcType="DECIMAL" property="orderAmt" />
    <result column="notify_url" jdbcType="VARCHAR" property="notifyUrl" />
    <result column="sign_type" jdbcType="VARCHAR" property="signType" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="attach" jdbcType="VARCHAR" property="attach" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, order_no, out_trade_no, prepay_id, goods_desc, total_fee, pay_type, 
    pay_status, transaction_id, create_time, pay_time, version_id, merchant_id, order_id, 
    settle_date, complete_date, status, notify_typ, pay_ord_no, order_amt, notify_url, 
    sign_type, signature, attach
  </sql>
  <select id="selectByExample" parameterType="com.xinmintx.agent.model.UOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from u_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from u_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinmintx.agent.model.UOrderExample">
    delete from u_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.UOrder" useGeneratedKeys="true">
    insert into u_order (user_id, order_no, out_trade_no, 
      prepay_id, goods_desc, total_fee, 
      pay_type, pay_status, transaction_id, 
      create_time, pay_time, version_id, 
      merchant_id, order_id, settle_date, 
      complete_date, status, notify_typ, 
      pay_ord_no, order_amt, notify_url, 
      sign_type, signature, attach
      )
    values (#{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{outTradeNo,jdbcType=VARCHAR}, 
      #{prepayId,jdbcType=VARCHAR}, #{goodsDesc,jdbcType=VARCHAR}, #{totalFee,jdbcType=BIGINT}, 
      #{payType,jdbcType=CHAR}, #{payStatus,jdbcType=CHAR}, #{transactionId,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, #{versionId,jdbcType=VARCHAR}, 
      #{merchantId,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{settleDate,jdbcType=TIMESTAMP}, 
      #{completeDate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{notifyTyp,jdbcType=INTEGER}, 
      #{payOrdNo,jdbcType=VARCHAR}, #{orderAmt,jdbcType=DECIMAL}, #{notifyUrl,jdbcType=VARCHAR}, 
      #{signType,jdbcType=VARCHAR}, #{signature,jdbcType=VARCHAR}, #{attach,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.UOrder" useGeneratedKeys="true">
    insert into u_order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="outTradeNo != null">
        out_trade_no,
      </if>
      <if test="prepayId != null">
        prepay_id,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
      <if test="totalFee != null">
        total_fee,
      </if>
      <if test="payType != null">
        pay_type,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="versionId != null">
        version_id,
      </if>
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="settleDate != null">
        settle_date,
      </if>
      <if test="completeDate != null">
        complete_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="notifyTyp != null">
        notify_typ,
      </if>
      <if test="payOrdNo != null">
        pay_ord_no,
      </if>
      <if test="orderAmt != null">
        order_amt,
      </if>
      <if test="notifyUrl != null">
        notify_url,
      </if>
      <if test="signType != null">
        sign_type,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="attach != null">
        attach,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        #{payType,jdbcType=CHAR},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=CHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="settleDate != null">
        #{settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="completeDate != null">
        #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="notifyTyp != null">
        #{notifyTyp,jdbcType=INTEGER},
      </if>
      <if test="payOrdNo != null">
        #{payOrdNo,jdbcType=VARCHAR},
      </if>
      <if test="orderAmt != null">
        #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="notifyUrl != null">
        #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        #{signType,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="attach != null">
        #{attach,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinmintx.agent.model.UOrderExample" resultType="java.lang.Long">
    select count(*) from u_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update u_order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.outTradeNo != null">
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.prepayId != null">
        prepay_id = #{record.prepayId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsDesc != null">
        goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFee != null">
        total_fee = #{record.totalFee,jdbcType=BIGINT},
      </if>
      <if test="record.payType != null">
        pay_type = #{record.payType,jdbcType=CHAR},
      </if>
      <if test="record.payStatus != null">
        pay_status = #{record.payStatus,jdbcType=CHAR},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.versionId != null">
        version_id = #{record.versionId,jdbcType=VARCHAR},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.settleDate != null">
        settle_date = #{record.settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.completeDate != null">
        complete_date = #{record.completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.notifyTyp != null">
        notify_typ = #{record.notifyTyp,jdbcType=INTEGER},
      </if>
      <if test="record.payOrdNo != null">
        pay_ord_no = #{record.payOrdNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderAmt != null">
        order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="record.notifyUrl != null">
        notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.signType != null">
        sign_type = #{record.signType,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.attach != null">
        attach = #{record.attach,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update u_order
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      prepay_id = #{record.prepayId,jdbcType=VARCHAR},
      goods_desc = #{record.goodsDesc,jdbcType=VARCHAR},
      total_fee = #{record.totalFee,jdbcType=BIGINT},
      pay_type = #{record.payType,jdbcType=CHAR},
      pay_status = #{record.payStatus,jdbcType=CHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      version_id = #{record.versionId,jdbcType=VARCHAR},
      merchant_id = #{record.merchantId,jdbcType=VARCHAR},
      order_id = #{record.orderId,jdbcType=VARCHAR},
      settle_date = #{record.settleDate,jdbcType=TIMESTAMP},
      complete_date = #{record.completeDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      notify_typ = #{record.notifyTyp,jdbcType=INTEGER},
      pay_ord_no = #{record.payOrdNo,jdbcType=VARCHAR},
      order_amt = #{record.orderAmt,jdbcType=DECIMAL},
      notify_url = #{record.notifyUrl,jdbcType=VARCHAR},
      sign_type = #{record.signType,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      attach = #{record.attach,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinmintx.agent.model.UOrder">
    update u_order
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="outTradeNo != null">
        out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="prepayId != null">
        prepay_id = #{prepayId,jdbcType=VARCHAR},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null">
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="payType != null">
        pay_type = #{payType,jdbcType=CHAR},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=CHAR},
      </if>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="versionId != null">
        version_id = #{versionId,jdbcType=VARCHAR},
      </if>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="settleDate != null">
        settle_date = #{settleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="completeDate != null">
        complete_date = #{completeDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="notifyTyp != null">
        notify_typ = #{notifyTyp,jdbcType=INTEGER},
      </if>
      <if test="payOrdNo != null">
        pay_ord_no = #{payOrdNo,jdbcType=VARCHAR},
      </if>
      <if test="orderAmt != null">
        order_amt = #{orderAmt,jdbcType=DECIMAL},
      </if>
      <if test="notifyUrl != null">
        notify_url = #{notifyUrl,jdbcType=VARCHAR},
      </if>
      <if test="signType != null">
        sign_type = #{signType,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="attach != null">
        attach = #{attach,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinmintx.agent.model.UOrder">
    update u_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=VARCHAR},
      out_trade_no = #{outTradeNo,jdbcType=VARCHAR},
      prepay_id = #{prepayId,jdbcType=VARCHAR},
      goods_desc = #{goodsDesc,jdbcType=VARCHAR},
      total_fee = #{totalFee,jdbcType=BIGINT},
      pay_type = #{payType,jdbcType=CHAR},
      pay_status = #{payStatus,jdbcType=CHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      version_id = #{versionId,jdbcType=VARCHAR},
      merchant_id = #{merchantId,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=VARCHAR},
      settle_date = #{settleDate,jdbcType=TIMESTAMP},
      complete_date = #{completeDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      notify_typ = #{notifyTyp,jdbcType=INTEGER},
      pay_ord_no = #{payOrdNo,jdbcType=VARCHAR},
      order_amt = #{orderAmt,jdbcType=DECIMAL},
      notify_url = #{notifyUrl,jdbcType=VARCHAR},
      sign_type = #{signType,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      attach = #{attach,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xinmintx.agent.model.UOrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from u_order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>