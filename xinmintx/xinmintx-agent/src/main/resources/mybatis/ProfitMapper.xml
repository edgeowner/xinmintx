<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.agent.mapper.ProfitMapper">
  <resultMap id="BaseResultMap" type="com.xinmintx.agent.model.Profit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="self_profit" jdbcType="DOUBLE" property="selfProfit" />
    <result column="super_profit" jdbcType="DOUBLE" property="superProfit" />
    <result column="cost" jdbcType="DOUBLE" property="cost" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, self_profit, super_profit, cost, role, description
  </sql>
  <select id="selectByExample" parameterType="com.xinmintx.agent.model.ProfitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from profit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from profit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinmintx.agent.model.ProfitExample">
    delete from profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.Profit" useGeneratedKeys="true">
    insert into profit (self_profit, super_profit, cost, 
      role, description)
    values (#{selfProfit,jdbcType=DOUBLE}, #{superProfit,jdbcType=DOUBLE}, #{cost,jdbcType=DOUBLE}, 
      #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.Profit" useGeneratedKeys="true">
    insert into profit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="selfProfit != null">
        self_profit,
      </if>
      <if test="superProfit != null">
        super_profit,
      </if>
      <if test="cost != null">
        cost,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="description != null">
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="selfProfit != null">
        #{selfProfit,jdbcType=DOUBLE},
      </if>
      <if test="superProfit != null">
        #{superProfit,jdbcType=DOUBLE},
      </if>
      <if test="cost != null">
        #{cost,jdbcType=DOUBLE},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinmintx.agent.model.ProfitExample" resultType="java.lang.Long">
    select count(*) from profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update profit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.selfProfit != null">
        self_profit = #{record.selfProfit,jdbcType=DOUBLE},
      </if>
      <if test="record.superProfit != null">
        super_profit = #{record.superProfit,jdbcType=DOUBLE},
      </if>
      <if test="record.cost != null">
        cost = #{record.cost,jdbcType=DOUBLE},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update profit
    set id = #{record.id,jdbcType=INTEGER},
      self_profit = #{record.selfProfit,jdbcType=DOUBLE},
      super_profit = #{record.superProfit,jdbcType=DOUBLE},
      cost = #{record.cost,jdbcType=DOUBLE},
      role = #{record.role,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinmintx.agent.model.Profit">
    update profit
    <set>
      <if test="selfProfit != null">
        self_profit = #{selfProfit,jdbcType=DOUBLE},
      </if>
      <if test="superProfit != null">
        super_profit = #{superProfit,jdbcType=DOUBLE},
      </if>
      <if test="cost != null">
        cost = #{cost,jdbcType=DOUBLE},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinmintx.agent.model.Profit">
    update profit
    set self_profit = #{selfProfit,jdbcType=DOUBLE},
      super_profit = #{superProfit,jdbcType=DOUBLE},
      cost = #{cost,jdbcType=DOUBLE},
      role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xinmintx.agent.model.ProfitExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from profit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>