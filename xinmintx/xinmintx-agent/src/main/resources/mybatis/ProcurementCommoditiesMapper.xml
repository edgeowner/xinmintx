<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.agent.mapper.ProcurementCommoditiesMapper">
  <resultMap id="BaseResultMap" type="com.xinmintx.agent.model.ProcurementCommodities">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="merchant_id" jdbcType="INTEGER" property="merchantId" />
    <result column="sample_name" jdbcType="VARCHAR" property="sampleName" />
    <result column="sample_type" jdbcType="VARCHAR" property="sampleType" />
    <result column="tracking_number" jdbcType="VARCHAR" property="trackingNumber" />
    <result column="supplier" jdbcType="VARCHAR" property="supplier" />
    <result column="cellphone" jdbcType="VARCHAR" property="cellphone" />
    <result column="detailed_address" jdbcType="VARCHAR" property="detailedAddress" />
    <result column="market_value" jdbcType="DOUBLE" property="marketValue" />
    <result column="procurement_price" jdbcType="DOUBLE" property="procurementPrice" />
    <result column="picture_id" jdbcType="INTEGER" property="pictureId" />
    <result column="commonone" jdbcType="VARCHAR" property="commonone" />
    <result column="commontwo" jdbcType="VARCHAR" property="commontwo" />
    <result column="is_review" jdbcType="INTEGER" property="isReview" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, merchant_id, sample_name, sample_type, tracking_number, supplier, cellphone, 
    detailed_address, market_value, procurement_price, picture_id, commonone, commontwo, 
    is_review
  </sql>
  <select id="selectByExample" parameterType="com.xinmintx.agent.model.ProcurementCommoditiesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from procurement_commodities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from procurement_commodities
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from procurement_commodities
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinmintx.agent.model.ProcurementCommoditiesExample">
    delete from procurement_commodities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.ProcurementCommodities" useGeneratedKeys="true">
    insert into procurement_commodities (merchant_id, sample_name, sample_type, 
      tracking_number, supplier, cellphone, 
      detailed_address, market_value, procurement_price, 
      picture_id, commonone, commontwo, 
      is_review)
    values (#{merchantId,jdbcType=INTEGER}, #{sampleName,jdbcType=VARCHAR}, #{sampleType,jdbcType=VARCHAR}, 
      #{trackingNumber,jdbcType=VARCHAR}, #{supplier,jdbcType=VARCHAR}, #{cellphone,jdbcType=VARCHAR}, 
      #{detailedAddress,jdbcType=VARCHAR}, #{marketValue,jdbcType=DOUBLE}, #{procurementPrice,jdbcType=DOUBLE}, 
      #{pictureId,jdbcType=INTEGER}, #{commonone,jdbcType=VARCHAR}, #{commontwo,jdbcType=VARCHAR}, 
      #{isReview,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.xinmintx.agent.model.ProcurementCommodities" useGeneratedKeys="true">
    insert into procurement_commodities
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        merchant_id,
      </if>
      <if test="sampleName != null">
        sample_name,
      </if>
      <if test="sampleType != null">
        sample_type,
      </if>
      <if test="trackingNumber != null">
        tracking_number,
      </if>
      <if test="supplier != null">
        supplier,
      </if>
      <if test="cellphone != null">
        cellphone,
      </if>
      <if test="detailedAddress != null">
        detailed_address,
      </if>
      <if test="marketValue != null">
        market_value,
      </if>
      <if test="procurementPrice != null">
        procurement_price,
      </if>
      <if test="pictureId != null">
        picture_id,
      </if>
      <if test="commonone != null">
        commonone,
      </if>
      <if test="commontwo != null">
        commontwo,
      </if>
      <if test="isReview != null">
        is_review,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="merchantId != null">
        #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="sampleName != null">
        #{sampleName,jdbcType=VARCHAR},
      </if>
      <if test="sampleType != null">
        #{sampleType,jdbcType=VARCHAR},
      </if>
      <if test="trackingNumber != null">
        #{trackingNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplier != null">
        #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null">
        #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="procurementPrice != null">
        #{procurementPrice,jdbcType=DOUBLE},
      </if>
      <if test="pictureId != null">
        #{pictureId,jdbcType=INTEGER},
      </if>
      <if test="commonone != null">
        #{commonone,jdbcType=VARCHAR},
      </if>
      <if test="commontwo != null">
        #{commontwo,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null">
        #{isReview,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinmintx.agent.model.ProcurementCommoditiesExample" resultType="java.lang.Long">
    select count(*) from procurement_commodities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update procurement_commodities
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.merchantId != null">
        merchant_id = #{record.merchantId,jdbcType=INTEGER},
      </if>
      <if test="record.sampleName != null">
        sample_name = #{record.sampleName,jdbcType=VARCHAR},
      </if>
      <if test="record.sampleType != null">
        sample_type = #{record.sampleType,jdbcType=VARCHAR},
      </if>
      <if test="record.trackingNumber != null">
        tracking_number = #{record.trackingNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.supplier != null">
        supplier = #{record.supplier,jdbcType=VARCHAR},
      </if>
      <if test="record.cellphone != null">
        cellphone = #{record.cellphone,jdbcType=VARCHAR},
      </if>
      <if test="record.detailedAddress != null">
        detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.marketValue != null">
        market_value = #{record.marketValue,jdbcType=DOUBLE},
      </if>
      <if test="record.procurementPrice != null">
        procurement_price = #{record.procurementPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.pictureId != null">
        picture_id = #{record.pictureId,jdbcType=INTEGER},
      </if>
      <if test="record.commonone != null">
        commonone = #{record.commonone,jdbcType=VARCHAR},
      </if>
      <if test="record.commontwo != null">
        commontwo = #{record.commontwo,jdbcType=VARCHAR},
      </if>
      <if test="record.isReview != null">
        is_review = #{record.isReview,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update procurement_commodities
    set id = #{record.id,jdbcType=INTEGER},
      merchant_id = #{record.merchantId,jdbcType=INTEGER},
      sample_name = #{record.sampleName,jdbcType=VARCHAR},
      sample_type = #{record.sampleType,jdbcType=VARCHAR},
      tracking_number = #{record.trackingNumber,jdbcType=VARCHAR},
      supplier = #{record.supplier,jdbcType=VARCHAR},
      cellphone = #{record.cellphone,jdbcType=VARCHAR},
      detailed_address = #{record.detailedAddress,jdbcType=VARCHAR},
      market_value = #{record.marketValue,jdbcType=DOUBLE},
      procurement_price = #{record.procurementPrice,jdbcType=DOUBLE},
      picture_id = #{record.pictureId,jdbcType=INTEGER},
      commonone = #{record.commonone,jdbcType=VARCHAR},
      commontwo = #{record.commontwo,jdbcType=VARCHAR},
      is_review = #{record.isReview,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinmintx.agent.model.ProcurementCommodities">
    update procurement_commodities
    <set>
      <if test="merchantId != null">
        merchant_id = #{merchantId,jdbcType=INTEGER},
      </if>
      <if test="sampleName != null">
        sample_name = #{sampleName,jdbcType=VARCHAR},
      </if>
      <if test="sampleType != null">
        sample_type = #{sampleType,jdbcType=VARCHAR},
      </if>
      <if test="trackingNumber != null">
        tracking_number = #{trackingNumber,jdbcType=VARCHAR},
      </if>
      <if test="supplier != null">
        supplier = #{supplier,jdbcType=VARCHAR},
      </if>
      <if test="cellphone != null">
        cellphone = #{cellphone,jdbcType=VARCHAR},
      </if>
      <if test="detailedAddress != null">
        detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      </if>
      <if test="marketValue != null">
        market_value = #{marketValue,jdbcType=DOUBLE},
      </if>
      <if test="procurementPrice != null">
        procurement_price = #{procurementPrice,jdbcType=DOUBLE},
      </if>
      <if test="pictureId != null">
        picture_id = #{pictureId,jdbcType=INTEGER},
      </if>
      <if test="commonone != null">
        commonone = #{commonone,jdbcType=VARCHAR},
      </if>
      <if test="commontwo != null">
        commontwo = #{commontwo,jdbcType=VARCHAR},
      </if>
      <if test="isReview != null">
        is_review = #{isReview,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinmintx.agent.model.ProcurementCommodities">
    update procurement_commodities
    set merchant_id = #{merchantId,jdbcType=INTEGER},
      sample_name = #{sampleName,jdbcType=VARCHAR},
      sample_type = #{sampleType,jdbcType=VARCHAR},
      tracking_number = #{trackingNumber,jdbcType=VARCHAR},
      supplier = #{supplier,jdbcType=VARCHAR},
      cellphone = #{cellphone,jdbcType=VARCHAR},
      detailed_address = #{detailedAddress,jdbcType=VARCHAR},
      market_value = #{marketValue,jdbcType=DOUBLE},
      procurement_price = #{procurementPrice,jdbcType=DOUBLE},
      picture_id = #{pictureId,jdbcType=INTEGER},
      commonone = #{commonone,jdbcType=VARCHAR},
      commontwo = #{commontwo,jdbcType=VARCHAR},
      is_review = #{isReview,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xinmintx.agent.model.ProcurementCommoditiesExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from procurement_commodities
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>