<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xinmintx.agent.mapper.GoodPtgoodMapper">
  <resultMap id="BaseResultMap" type="com.xinmintx.agent.model.GoodPtgood">
    <id column="ptgoods_id" jdbcType="INTEGER" property="ptgoodsId" />
    <result column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="ptgoods_name" jdbcType="VARCHAR" property="ptgoodsName" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="pt_price" jdbcType="DECIMAL" property="ptPrice" />
    <result column="pt_size" jdbcType="INTEGER" property="ptSize" />
    <result column="pt_validhours" jdbcType="DOUBLE" property="ptValidhours" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="ptgoods_number" jdbcType="INTEGER" property="ptgoodsNumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="ptgoods_thumb" jdbcType="VARCHAR" property="ptgoodsThumb" />
    <result column="ptgoods_imgs" jdbcType="VARCHAR" property="ptgoodsImgs" />
    <result column="addtime" jdbcType="TIMESTAMP" property="addtime" />
    <result column="uptime" jdbcType="TIMESTAMP" property="uptime" />
    <result column="is_sale" jdbcType="INTEGER" property="isSale" />
    <result column="pt_times" jdbcType="INTEGER" property="ptTimes" />
    <result column="group_type" jdbcType="INTEGER" property="groupType" />
    <result column="common" jdbcType="VARCHAR" property="common" />
    <result column="name_activity" jdbcType="VARCHAR" property="nameActivity" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ptgoods_id, goods_id, ptgoods_name, price, pt_price, pt_size, pt_validhours, start_time, 
    end_time, ptgoods_number, description, content, ptgoods_thumb, ptgoods_imgs, addtime, 
    uptime, is_sale, pt_times, group_type, common, name_activity
  </sql>
  <select id="selectByExample" parameterType="com.xinmintx.agent.model.GoodPtgoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good_ptgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from good_ptgood
    where ptgoods_id = #{ptgoodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from good_ptgood
    where ptgoods_id = #{ptgoodsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinmintx.agent.model.GoodPtgoodExample">
    delete from good_ptgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinmintx.agent.model.GoodPtgood">
    insert into good_ptgood (ptgoods_id, goods_id, ptgoods_name, 
      price, pt_price, pt_size, 
      pt_validhours, start_time, end_time, 
      ptgoods_number, description, content, 
      ptgoods_thumb, ptgoods_imgs, addtime, 
      uptime, is_sale, pt_times, 
      group_type, common, name_activity
      )
    values (#{ptgoodsId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{ptgoodsName,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{ptPrice,jdbcType=DECIMAL}, #{ptSize,jdbcType=INTEGER}, 
      #{ptValidhours,jdbcType=DOUBLE}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{ptgoodsNumber,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{ptgoodsThumb,jdbcType=VARCHAR}, #{ptgoodsImgs,jdbcType=VARCHAR}, #{addtime,jdbcType=TIMESTAMP}, 
      #{uptime,jdbcType=TIMESTAMP}, #{isSale,jdbcType=INTEGER}, #{ptTimes,jdbcType=INTEGER}, 
      #{groupType,jdbcType=INTEGER}, #{common,jdbcType=VARCHAR}, #{nameActivity,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinmintx.agent.model.GoodPtgood">
    insert into good_ptgood
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ptgoodsId != null">
        ptgoods_id,
      </if>
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="ptgoodsName != null">
        ptgoods_name,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="ptPrice != null">
        pt_price,
      </if>
      <if test="ptSize != null">
        pt_size,
      </if>
      <if test="ptValidhours != null">
        pt_validhours,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="ptgoodsNumber != null">
        ptgoods_number,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="ptgoodsThumb != null">
        ptgoods_thumb,
      </if>
      <if test="ptgoodsImgs != null">
        ptgoods_imgs,
      </if>
      <if test="addtime != null">
        addtime,
      </if>
      <if test="uptime != null">
        uptime,
      </if>
      <if test="isSale != null">
        is_sale,
      </if>
      <if test="ptTimes != null">
        pt_times,
      </if>
      <if test="groupType != null">
        group_type,
      </if>
      <if test="common != null">
        common,
      </if>
      <if test="nameActivity != null">
        name_activity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ptgoodsId != null">
        #{ptgoodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ptgoodsName != null">
        #{ptgoodsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="ptPrice != null">
        #{ptPrice,jdbcType=DECIMAL},
      </if>
      <if test="ptSize != null">
        #{ptSize,jdbcType=INTEGER},
      </if>
      <if test="ptValidhours != null">
        #{ptValidhours,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptgoodsNumber != null">
        #{ptgoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="ptgoodsThumb != null">
        #{ptgoodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="ptgoodsImgs != null">
        #{ptgoodsImgs,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null">
        #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSale != null">
        #{isSale,jdbcType=INTEGER},
      </if>
      <if test="ptTimes != null">
        #{ptTimes,jdbcType=INTEGER},
      </if>
      <if test="groupType != null">
        #{groupType,jdbcType=INTEGER},
      </if>
      <if test="common != null">
        #{common,jdbcType=VARCHAR},
      </if>
      <if test="nameActivity != null">
        #{nameActivity,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinmintx.agent.model.GoodPtgoodExample" resultType="java.lang.Long">
    select count(*) from good_ptgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update good_ptgood
    <set>
      <if test="record.ptgoodsId != null">
        ptgoods_id = #{record.ptgoodsId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null">
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.ptgoodsName != null">
        ptgoods_name = #{record.ptgoodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.ptPrice != null">
        pt_price = #{record.ptPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.ptSize != null">
        pt_size = #{record.ptSize,jdbcType=INTEGER},
      </if>
      <if test="record.ptValidhours != null">
        pt_validhours = #{record.ptValidhours,jdbcType=DOUBLE},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ptgoodsNumber != null">
        ptgoods_number = #{record.ptgoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.ptgoodsThumb != null">
        ptgoods_thumb = #{record.ptgoodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="record.ptgoodsImgs != null">
        ptgoods_imgs = #{record.ptgoodsImgs,jdbcType=VARCHAR},
      </if>
      <if test="record.addtime != null">
        addtime = #{record.addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.uptime != null">
        uptime = #{record.uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isSale != null">
        is_sale = #{record.isSale,jdbcType=INTEGER},
      </if>
      <if test="record.ptTimes != null">
        pt_times = #{record.ptTimes,jdbcType=INTEGER},
      </if>
      <if test="record.groupType != null">
        group_type = #{record.groupType,jdbcType=INTEGER},
      </if>
      <if test="record.common != null">
        common = #{record.common,jdbcType=VARCHAR},
      </if>
      <if test="record.nameActivity != null">
        name_activity = #{record.nameActivity,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update good_ptgood
    set ptgoods_id = #{record.ptgoodsId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      ptgoods_name = #{record.ptgoodsName,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DECIMAL},
      pt_price = #{record.ptPrice,jdbcType=DECIMAL},
      pt_size = #{record.ptSize,jdbcType=INTEGER},
      pt_validhours = #{record.ptValidhours,jdbcType=DOUBLE},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      ptgoods_number = #{record.ptgoodsNumber,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      ptgoods_thumb = #{record.ptgoodsThumb,jdbcType=VARCHAR},
      ptgoods_imgs = #{record.ptgoodsImgs,jdbcType=VARCHAR},
      addtime = #{record.addtime,jdbcType=TIMESTAMP},
      uptime = #{record.uptime,jdbcType=TIMESTAMP},
      is_sale = #{record.isSale,jdbcType=INTEGER},
      pt_times = #{record.ptTimes,jdbcType=INTEGER},
      group_type = #{record.groupType,jdbcType=INTEGER},
      common = #{record.common,jdbcType=VARCHAR},
      name_activity = #{record.nameActivity,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinmintx.agent.model.GoodPtgood">
    update good_ptgood
    <set>
      <if test="goodsId != null">
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="ptgoodsName != null">
        ptgoods_name = #{ptgoodsName,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="ptPrice != null">
        pt_price = #{ptPrice,jdbcType=DECIMAL},
      </if>
      <if test="ptSize != null">
        pt_size = #{ptSize,jdbcType=INTEGER},
      </if>
      <if test="ptValidhours != null">
        pt_validhours = #{ptValidhours,jdbcType=DOUBLE},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ptgoodsNumber != null">
        ptgoods_number = #{ptgoodsNumber,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="ptgoodsThumb != null">
        ptgoods_thumb = #{ptgoodsThumb,jdbcType=VARCHAR},
      </if>
      <if test="ptgoodsImgs != null">
        ptgoods_imgs = #{ptgoodsImgs,jdbcType=VARCHAR},
      </if>
      <if test="addtime != null">
        addtime = #{addtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uptime != null">
        uptime = #{uptime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSale != null">
        is_sale = #{isSale,jdbcType=INTEGER},
      </if>
      <if test="ptTimes != null">
        pt_times = #{ptTimes,jdbcType=INTEGER},
      </if>
      <if test="groupType != null">
        group_type = #{groupType,jdbcType=INTEGER},
      </if>
      <if test="common != null">
        common = #{common,jdbcType=VARCHAR},
      </if>
      <if test="nameActivity != null">
        name_activity = #{nameActivity,jdbcType=VARCHAR},
      </if>
    </set>
    where ptgoods_id = #{ptgoodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinmintx.agent.model.GoodPtgood">
    update good_ptgood
    set goods_id = #{goodsId,jdbcType=INTEGER},
      ptgoods_name = #{ptgoodsName,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      pt_price = #{ptPrice,jdbcType=DECIMAL},
      pt_size = #{ptSize,jdbcType=INTEGER},
      pt_validhours = #{ptValidhours,jdbcType=DOUBLE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      ptgoods_number = #{ptgoodsNumber,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      ptgoods_thumb = #{ptgoodsThumb,jdbcType=VARCHAR},
      ptgoods_imgs = #{ptgoodsImgs,jdbcType=VARCHAR},
      addtime = #{addtime,jdbcType=TIMESTAMP},
      uptime = #{uptime,jdbcType=TIMESTAMP},
      is_sale = #{isSale,jdbcType=INTEGER},
      pt_times = #{ptTimes,jdbcType=INTEGER},
      group_type = #{groupType,jdbcType=INTEGER},
      common = #{common,jdbcType=VARCHAR},
      name_activity = #{nameActivity,jdbcType=VARCHAR}
    where ptgoods_id = #{ptgoodsId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.xinmintx.agent.model.GoodPtgoodExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from good_ptgood
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>